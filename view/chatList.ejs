 <!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>聊天列表</title>
<!-- 	<link rel="stylesheet" href="http://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css">
 -->		
   <link rel="stylesheet" href="../css/bootstrap.min.css">
    <script src="js/socket.io/socket.io.js"></script>
    <meta name="keywords" content="Scott Jeremy" />
    <style>
       a:hover{
        cursor:pointer;
       text-decoration: none;
       }
    	.header{
    		background-color:#f2f2f2;
    		width:100%;
    		margin-bottom: 20px;
    	}
    	.header ul{
    		padding:0 150px;
    	    height:100px;
    	}
    	.header ul li{
    		line-height: 100px;
             }   
         .middle-body{
           padding:0 80px;
         } 

         /*头像样式*/
       .headPortrait a{
           text-decoration: none;
           background-color: #f2f2f2;
           color:#000;
       }
       .headPortrait a:link:visited{
           text-decoration: none;
           outline: #f2f2f2 solid 1px;
       }    
       .bor{
        border:1px solid #000;
       }  
       .friendItem{
        border-radius: 3px;
       }
    </style>
</head>

<body>
<div class='col-md-4 bor'>
     <h3>好友列表</h3>
     <div id="friendList" >
  <!--       <p class="friendItem "  onclick="chatWithFriend(this)" >  
          <input type="hidden" name="id" value="ididididdidi" />
          <img src="img/public/head-default-Portrait.jpeg"  height='40px' width='40px' class="img-circle " />
          <span>usernameaaa</span><br> 
        </p>
            <p class="friendItem "  onclick="chatWithFriend(this)" >  
          <input type="hidden" name="id" value="ididididdidi" />
          <img src="img/public/head-default-Portrait.jpeg"  height='40px' width='40px' class="img-circle " />
          <span>usernameaaa</span><br> 
        </p> -->
     </div>
</div>
<div class="col-md-2 "></div>
<div class="col-md-6 bor">
     <h3>在线列表</h3>
     <div id ="onlineList"></div>
</div>
</body>
 
<!-- <script src="http://cdn.bootcss.com/jquery/2.1.1/jquery.min.js""></script>
<script src="http://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js"></script> -->
<script src="../js/jquery2.1.4.js"></script>
<script src="../js/bootstrap.min.js"></script>
<script src="../js/fileuploadurl.js"></script>
<script> 
const friendList = $("#friendList");
const onlineList = $("#onlineList");
const socket = io.connect('http://127.0.0.1:3000');

// 文档加载调用获取好友列表,
$(document).ready(function(){  
    getFriendList();
    getAllOnlineUser();
}); 
 

// socketio监听所有连接上线用户，只要有人上线就添加
socket.on('peopleOnline',(user)=>{
 console.log("有人上线了,看！在池子里面");
 listenUserOnline(user);
});

//添加用户上线池
function listenUserOnline(userOnline){
  const user="<p class='friendItem'  onclick='addFriend(this)' ><input type='hidden' name='id' value='"+userOnline.id+"' /><img src='upload/"+userOnline.src+"'  height='40px' width='40px' class='img-circle' /><span>"+userOnline.username+"</span><br></p>";
  $(user).appendTo(onlineList);
}
 


//点击好友聊天，新开聊天页面，进行聊天 
  function chatWithFriend(obj){
    const objIt  =obj.children;
    const id = objIt[0].value;
    const src= objIt[1].src;
    const username =objIt[2].innerHTML;
    //下面挑转聊天页面，也可以使用window.location.href带参数跳转
    window.location.href="http://127.0.0.1:3000/chat?id="+id+"&src="+src+"&username="+username;
   }


 

  //获取好友列表方法ajax刷新好友列表
  function getFriendList(){
  $.ajax({
      type: "GET",
      url: "/chat/getFriendList",
      dataType: "json", 
      headers: {
        'Authorization':'Bearer '+ localStorage.getItem('token')
      },
      success: function(data){
      //接受返回的数据，前端判断采取的动作 
      console.log(data);
        if(data.length >0){ 
          data.forEach((item,index)=>{
               $("<p class='friendItem'  onclick='chatWithFriend(this)' ><input type='hidden' name='id' value='"+item.id+"' /><img src='"+item.friendImage+"'  height='40px' width='40px' class='img-circle' /><span>"+item.friendName+"</span><br></p>").appendTo(friendList);
             }); 
        }else if(data.length===0){ 
          $("<p>你还是一个人，暂时没有朋友，快到右侧的在线列表添加好友把 </p>").appendTo(friendList);
        }
      }
    });
  }  
  
  //获取所有在线的用户
  function getAllOnlineUser(){
  socket.emit('getAllOnlineUser',(userList)=>{ 
     userList.forEach((item,index)=>{
       listenUserOnline(item);
     });
  });
     
  } 

  //添加好友
  function addFriend(obj){
  const objIt  =obj.children;
  const id = objIt[0].value;
  const src= objIt[1].src;
  const username =objIt[2].innerHTML;
  const isAddFriend=confirm("你确定添加"+username+"为你的好友吗？");
  if(!isAddFriend){
    return false;
  }
  const data = {};
  data.friendId = id;
  data.friendImage = src;   
  data.friendName = username; 
  $.ajax({
      type: "POST",
      url: "/chat/addFriend",
      dataType: "json", 
      data: data,
      headers: {
        'Authorization':'Bearer '+ localStorage.getItem('token')
      },
      success: function(data){
      //接受返回的数据，前端判断采取的动作
        if(data&&data.status === 1001){
          $("<p class='friendItem'  onclick='chatWithFriend(this)' ><input type='hidden' name='id' value='"+id+"' /><img src='"+src+"'  height='40px' width='40px' class='img-circle' /><span>"+username+"</span><br></p>").appendTo(friendList);
        }
      }
    });
  }  
  

</script>
</html> 

